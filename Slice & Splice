In JavaScript, `slice()` and `splice()` are two array methods with distinct purposes:

`slice()`
- Purpose: Creates a new array containing a portion of the original array.
- Syntax: `array.slice(start, end)`
  - `start` (optional): The index at which to begin extraction. Defaults to 0.
  - `end` (optional): The index before which to end extraction. Defaults to the array's length.
- Behavior: Does not modify the original array.
- Example:

  const fruits = ["Banana", "Orange", "Lemon", "Apple", "Mango"];
  const citrus = fruits.slice(1, 3);
  console.log(citrus); // ["Orange", "Lemon"]
  console.log(fruits); // ["Banana", "Orange", "Lemon", "Apple", "Mango"]


`splice()`
- Purpose: Adds, removes, or replaces elements in an array.
- Syntax: `array.splice(start, deleteCount, item1, item2, ...)`
  - `start`: The index at which to start changing the array.
  - `deleteCount` (optional): The number of elements to remove. Defaults to 0.
  - `item1, item2, ...` (optional): Elements to add to the array.
- Behavior: Modifies the original array.
- Example:

  const fruits = ["Banana", "Orange", "Apple", "Mango"];
  fruits.splice(2, 0, "Lemon", "Kiwi");
  console.log(fruits); // ["Banana", "Orange", "Lemon", "Kiwi", "Apple", "Mango"]


In summary, use `slice()` when you need a new array without altering the original, and `splice()` when you need to modify the original array by adding, removing, or replacing elements.
